Index: src/main/kotlin/one/digitalinnovation/collections/TesteOperacoes.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/one/digitalinnovation/collections/TesteOperacoes.kt b/src/main/kotlin/one/digitalinnovation/collections/TesteOperacoes.kt
new file mode 100644
--- /dev/null	(date 1615341251367)
+++ b/src/main/kotlin/one/digitalinnovation/collections/TesteOperacoes.kt	(date 1615341251367)
@@ -0,0 +1,20 @@
+package one.digitalinnovation.collections
+
+fun main() {
+    val salarios = doubleArrayOf(1000.0, 2250.0, 4000.0)
+
+    for(salario in salarios){
+        println(salario)
+    }
+
+    println("------------------------------------------------------------")
+    println("Maior salarios: ${salarios.maxOrNull()}")
+    println("Menor salario: ${salarios.minOrNull()}")
+    println("Media salarial: ${salarios.average()}")
+
+    val salariosMaiorQue2500 = salarios.filter { it > 2500.0 }
+
+    println("------------------------------------------------------------")
+    salariosMaiorQue2500.forEach { println(it) }
+
+}
\ No newline at end of file
Index: src/main/kotlin/one/digitalinnovation/collections/TesteDoubleArray.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/one/digitalinnovation/collections/TesteDoubleArray.kt b/src/main/kotlin/one/digitalinnovation/collections/TesteDoubleArray.kt
new file mode 100644
--- /dev/null	(date 1615338935475)
+++ b/src/main/kotlin/one/digitalinnovation/collections/TesteDoubleArray.kt	(date 1615338935475)
@@ -0,0 +1,24 @@
+package one.digitalinnovation.collections
+
+fun main() {
+    val salarios = DoubleArray(3)
+    salarios[0] = 1000.0
+    salarios[1] = 3000.0
+    salarios[2] = 500.0
+
+    salarios.forEach { println(it) }
+    println("---------------------------------------------------------------")
+
+    salarios.forEachIndexed{index, salario ->
+        salarios[index] = salario * 1.1
+    }
+
+    salarios.forEach { println(it) }
+
+    val salarios2 = doubleArrayOf(1500.0, 1250.0, 5000.0)
+    salarios2.sort()
+    println("---------------------------------------------------------------")
+
+    salarios2.forEach { println(it) }
+
+}
\ No newline at end of file
Index: src/main/kotlin/one/digitalinnovation/collections/Funcionario.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/one/digitalinnovation/collections/Funcionario.kt b/src/main/kotlin/one/digitalinnovation/collections/Funcionario.kt
new file mode 100644
--- /dev/null	(date 1615426928187)
+++ b/src/main/kotlin/one/digitalinnovation/collections/Funcionario.kt	(date 1615426928187)
@@ -0,0 +1,14 @@
+package one.digitalinnovation.collections
+
+data class Funcionario(
+    val nome: String,
+    val salario: Double,
+    val tipoContratacao: String
+){
+    override  fun toString(): String =
+        """
+            Nome:       $nome
+            Sal√°rio:    $salario
+            Contrato:   $tipoContratacao
+        """.trimIndent()
+}
Index: src/main/kotlin/one/digitalinnovation/collections/TesteList.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/one/digitalinnovation/collections/TesteList.kt b/src/main/kotlin/one/digitalinnovation/collections/TesteList.kt
new file mode 100644
--- /dev/null	(date 1615426928199)
+++ b/src/main/kotlin/one/digitalinnovation/collections/TesteList.kt	(date 1615426928199)
@@ -0,0 +1,23 @@
+package one.digitalinnovation.collections
+
+fun main() {
+    val joao = Funcionario( "Joao", 2000.0, "CLT")
+    val pedro = Funcionario( "Pedro", 1500.0, "PJ")
+    val maria = Funcionario( "Maria", 4000.0, "CLT")
+
+    val funcionarios = listOf(joao, pedro, maria)
+
+    funcionarios.forEach{ println(it)}
+
+    println("--------------------------------------")
+    println(funcionarios.find{it.nome == "Maria"})
+
+    println("--------------------------------------")
+    funcionarios.sortedBy { it.salario }.forEach { println(it) }
+
+    println("--------------------------------------")
+    funcionarios
+        .groupBy { it.tipoContratacao }
+        .forEach { println(it) }
+
+}
Index: src/main/kotlin/one/digitalinnovation/collections/TesteSet.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/one/digitalinnovation/collections/TesteSet.kt b/src/main/kotlin/one/digitalinnovation/collections/TesteSet.kt
new file mode 100644
--- /dev/null	(date 1615427694507)
+++ b/src/main/kotlin/one/digitalinnovation/collections/TesteSet.kt	(date 1615427694507)
@@ -0,0 +1,23 @@
+package one.digitalinnovation.collections
+
+fun main() {
+    val joao = Funcionario( "Joao", 2000.0, "CLT")
+    val pedro = Funcionario( "Pedro", 1500.0, "PJ")
+    val maria = Funcionario( "Maria", 4000.0, "CLT")
+
+    val funcionarios1 = setOf(joao, pedro)
+    val funcionarios2 = setOf(maria)
+
+    val resultUnion = funcionarios1.union(funcionarios2)
+    resultUnion.forEach { println(it) }
+
+    println("--------------------------------------")
+    val funcionarios3 = setOf(joao, pedro, maria)
+    val resultSubtract = funcionarios3.subtract(funcionarios2)
+    resultSubtract.forEach { println(it) }
+
+    println("--------------------------------------")
+    val resultIntersect = funcionarios3.intersect(funcionarios2)
+    resultIntersect.forEach { println(it) }
+
+}
\ No newline at end of file
